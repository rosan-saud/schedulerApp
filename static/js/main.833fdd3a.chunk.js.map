{"version":3,"sources":["images/option_icon.svg","images/logo_icon.svg","images/clock.svg","components/sideNav.jsx","components/form.jsx","components/View.jsx","App.js","index.js"],"names":["module","exports","SideNav","className","style","marginLeft","src","Logo","width","color","Option","ADD_SCH","gql","withRouter","props","useMutation","addSch","useState","title","setTitle","date","setDate","time","subtitles","sections","createSection","fontWeight","type","value","onChange","event","target","map","section","id","display","e","clickedTime","handleTimeChange","clickedSection","addTitleToSection","r","subtitleID","handleSubtitle","onClick","push","addNewSubsection","float","schedule","saveSchedule","variables","alert","GET_MY_SCH","recievedSchedule","useQuery","loading","error","data","console","schedules","sections1","JSON","parse","stringify","log","history","moment","format","verticalAlign","Clock","sec","subtitle","createApolloClient","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","scheduleData","setData","client","setClient","useEffect","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.833fdd3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/option_icon.05e8a417.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_icon.b91becec.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.871bbe23.svg\";","import React from \"react\";\r\nimport Logo from \"../images/logo_icon.svg\";\r\nimport Option from \"../images/option_icon.svg\";\r\n\r\nfunction SideNav() {\r\n  return (\r\n    <div className=\"sidenav\">\r\n      <h1 style={{ marginLeft: 75 }} className=\"logo\">\r\n        <img src={Logo} width=\"50px\" />\r\n        <span style={{ color: \"#dc6f8a\" }}>Logo</span>\r\n      </h1>\r\n      <div className=\"nav\">\r\n        <div className=\"nav-options\">\r\n          <img src={Option} /> <span> Option one</span>\r\n        </div>\r\n\r\n        <div className=\"nav-options\">\r\n          <img src={Option} /> <span> Option two</span>\r\n        </div>\r\n\r\n        <div className=\"nav-options\">\r\n          <img src={Option} /> <span> Option thr</span>ee\r\n        </div>\r\n\r\n        <div className=\"nav-options\">\r\n          <img src={Option} /> <span> Option four</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SideNav;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst ADD_SCH = gql`\r\n  mutation($title: String!, $date: date, $sections: jsonb) {\r\n    insert_schedules(\r\n      objects: { title: $title, date: $date, sections: $sections }\r\n    ) {\r\n      affected_rows\r\n      returning {\r\n        id\r\n        title\r\n        date\r\n        sections\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Form(props) {\r\n  const [addSch] = useMutation(ADD_SCH);\r\n\r\n  const sectionSchema = [{ time: \"\", title: \"\", subtitles: [\"\"] }];\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const [sections, createSection] = useState(sectionSchema);\r\n\r\n  function handleTitleChange(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function handleDate(event) {\r\n    setDate(event.target.value);\r\n  }\r\n\r\n  function addNewSection() {\r\n    sections.push({ time: \"\", title: \"\", subtitles: [\"\"] });\r\n    createSection([...sections]);\r\n  }\r\n\r\n  function addTitleToSection(e, id) {\r\n    let clickedSection = sections[id];\r\n    clickedSection.title = e.target.value;\r\n    sections[id] = clickedSection;\r\n    createSection([...sections]);\r\n  }\r\n  function handleTimeChange(e, id) {\r\n    let clickedTime = sections[id];\r\n    clickedTime.time = e.target.value;\r\n    sections[id] = clickedTime;\r\n    createSection([...sections]);\r\n  }\r\n  function handleSubtitle(e, id, subtitleID) {\r\n    sections[id].subtitles[subtitleID] = e.target.value;\r\n    createSection([...sections]);\r\n  }\r\n\r\n  function addNewSubsection(e, id) {\r\n    sections[id].subtitles.push(\"\");\r\n    createSection([...sections]);\r\n  }\r\n  function createSchedule() {\r\n    const schedule = { title, date, sections };\r\n    if (!title || !date) {\r\n      alert(\"Enter Title and Date of your training\");\r\n    } else {\r\n      // localStorage.setItem(schedule, JSON.stringify(schedule));\r\n      props.saveSchedule(schedule);\r\n      addSch({ variables: { title: title, date: date, sections: sections } });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 style={{ fontWeight: 500 }}>Create a new training schedule</h1>\r\n      </div>\r\n      <div className=\"scroll-block\">\r\n        <div className=\"mainSection\">\r\n          <div className=\"dateDiv\">\r\n            <label className=\"label\">Date</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={handleDate}\r\n            />\r\n          </div>\r\n          <div className=\"titleDiv\">\r\n            <label className=\"label\"> Title</label>\r\n\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={handleTitleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {sections.map((section, id) => {\r\n          return (\r\n            <div className=\"subsectionDiv\">\r\n              {id == 0 ? (\r\n                <div className=\"subheadingDiv\">\r\n                  <h3\r\n                    className=\"sectionHeading\"\r\n                    style={{ display: \"inline-block\" }}\r\n                  >\r\n                    Section\r\n                  </h3>\r\n                </div>\r\n              ) : null}\r\n              <div className=\"timeDiv\">\r\n                <label className=\"label\">Time </label>\r\n\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"time\"\r\n                  value={section.time}\r\n                  onChange={(e) => handleTimeChange(e, id)}\r\n                />\r\n              </div>\r\n              <div className=\"subtitleDiv\">\r\n                <label className=\"label\">Title</label>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  value={section.title}\r\n                  onChange={(e) => addTitleToSection(e, id)}\r\n                />\r\n              </div>\r\n              <div className=\"subsubtitleDiv\">\r\n                {section.subtitles.map((r, subtitleID) => {\r\n                  return (\r\n                    <div className=\"6th\">\r\n                      <label className=\"label\">Subtitle</label>\r\n\r\n                      <input\r\n                        className=\"input\"\r\n                        type=\"text\"\r\n                        value={r}\r\n                        onChange={(e) => handleSubtitle(e, id, subtitleID)}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {\r\n                <button\r\n                  className=\"secondaryBtn\"\r\n                  onClick={(e) => {\r\n                    addNewSubsection(e, id);\r\n                  }}\r\n                >\r\n                  New Subtitle\r\n                </button>\r\n              }\r\n            </div>\r\n          );\r\n        })}\r\n        <div>\r\n          <button\r\n            className=\"secondaryBtn new-sec\"\r\n            style={{ float: \"right\", display: \"inline-block\" }}\r\n            onClick={addNewSection}\r\n          >\r\n            New Section\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"create-block\">\r\n        <button className=\"primaryBtn\" type=\"submit\" onClick={createSchedule}>\r\n          Create\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Form);\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Clock from \"../images/clock.svg\";\r\nimport moment from \"moment\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_MY_SCH = gql`\r\n  query getSchedules {\r\n    schedules(order_by: { id: desc }) {\r\n      id\r\n      title\r\n      date\r\n      sections\r\n    }\r\n  }\r\n`;\r\n\r\nfunction View(props) {\r\n  function createNewTraining() {\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  const sectionData = props.recievedSchedule.sections;\r\n\r\n  const { loading, error, data } = useQuery(GET_MY_SCH);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    console.error(error);\r\n    return <div>Error!</div>;\r\n  }\r\n  const schedules = data ? data.schedules[0] : {};\r\n  const sections1 = schedules\r\n    ? JSON.parse(JSON.stringify(schedules.sections))\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"viewCont\">\r\n      {console.log(typeof sections1)}\r\n      <div>\r\n        <h1>Trainings</h1>\r\n      </div>\r\n      <div className=\"date-btn\">\r\n        <div>\r\n          <button\r\n            className=\"secondaryBtn createSchedule\"\r\n            onClick={createNewTraining}\r\n          >\r\n            New Training\r\n          </button>\r\n          <div className=\"selectDate\">\r\n            <span className=\"date\">\r\n              {\" \"}\r\n              {moment(schedules.date).format(\"Do MMM\")}\r\n            </span>\r\n            ❮&nbsp; &nbsp;❯\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"viewTitle\">\r\n        <h1 style={{ fontWeight: 500 }}>{schedules.title}</h1>\r\n      </div>\r\n      <div className=\"viewDate\">\r\n        <h2>\r\n          <div className=\"clock\">\r\n            <img style={{ verticalAlign: \"middle\" }} src={Clock} width=\"25px\" />\r\n          </div>\r\n          <div className=\"viewDate main\">{schedules.date}</div>\r\n        </h2>\r\n      </div>\r\n      {sections1\r\n        ? sections1.map((sec, id) => {\r\n            return sec.title && sec.time ? (\r\n              <div className=\"viewSubsection\">\r\n                <div className=\"viewSubsec\">\r\n                  <div className=\"subsecTitle\">\r\n                    <h3> {sec.title}</h3>\r\n                  </div>\r\n                  <div className=\"time\">{sec.time}</div>\r\n                  {sec.subtitles\r\n                    ? sec.subtitles.map((subtitle, id) => {\r\n                        return subtitle ? (\r\n                          <div className=\"subtitles\">\r\n                            <li>{subtitle} </li>\r\n                          </div>\r\n                        ) : null;\r\n                      })\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            ) : null;\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(View);\r\n","import React, { useEffect, useState } from \"react\";\nimport SideNav from \"./components/sideNav\";\nimport Form from \"./components/form\";\nimport View from \"./components/View\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n} from \"@apollo/client\";\n\nconst createApolloClient = () => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: \"https://alert-pug-56.hasura.app/v1/graphql\",\n    }),\n    cache: new InMemoryCache(),\n  });\n};\n\nfunction App(props) {\n  const [scheduleData, setData] = useState(\"\");\n  const [client, setClient] = useState(\"\");\n\n  function startApollo() {\n    let data = createApolloClient;\n    setClient(data);\n  }\n\n  useEffect(() => {\n    startApollo();\n  }, []);\n\n  return client ? (\n    <ApolloProvider client={client}>\n      <div className=\"main-cont\">\n        <SideNav />\n        {/*  or use as SideNav() */}\n\n        <div className=\"body-cont\">\n          <Switch>\n            <Route path=\"/view\" exact>\n              <View recievedSchedule={scheduleData} />\n            </Route>\n            <Route path=\"/\">\n              <Form\n                saveSchedule={(data) => {\n                  setData(data);\n                  props.history.push(\"/view\");\n                }}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </ApolloProvider>\n  ) : (\n    \"Loading\"\n  );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}